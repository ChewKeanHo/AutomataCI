#!/bin/sh
# Copyright 2023  (Holloway) Chew, Kean Ho <hollowaykeanho@gmail.com>
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at:
#                http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
. "${LIBS_AUTOMATACI}/services/io/fs.sh"
. "${LIBS_AUTOMATACI}/services/io/strings.sh"




CITATION_Build() {
        ___filepath="$1"
        ___abstract_filepath="$2"
        ___citation_filepath="$3"
        ___cff_version="$4"
        ___type="$5"
        ___date="$6"
        ___title="$7"
        ___version="$8"
        ___license="$9"
        ___repo="${10}"
        ___repo_code="${11}"
        ___repo_artifact="${12}"
        ___contact_name="${13}"
        ___contact_website="${14}"
        ___contact_email="${15}"


        # validate input
        if [ $(STRINGS_Is_Empty "$___cff_version") -eq 0 ]; then
                return 0 # requested to be disabled
        fi

        if [ $(STRINGS_Is_Empty "$___filepath") -eq 0 ] ||
                [ $(STRINGS_Is_Empty "$___title") -eq 0 ] ||
                [ $(STRINGS_Is_Empty "$___type") -eq 0 ]; then
                return 1
        fi

        if [ $(STRINGS_Is_Empty "$___citation_filepath") -eq 0 ]; then
                return 1
        fi

        FS::is_file "$___citation_filepath"
        if [ $? -ne 0 ]; then
                return 1
        fi


        # execute
        FS::remove_silently "$___filepath"
        FS::make_housing_directory "$___filepath"
        FS::write_file "$___filepath" "\
# WARNING: auto-generated by AutomataCI

cff-version: \"${___cff_version}\"
type: \"${___type}\"
"
        if [ $? -ne 0 ]; then
                return 1
        fi

        if [ $(STRINGS_Is_Empty "$___date") -ne 0 ]; then
                FS::append_file "$___filepath" "\
date-released: \"${___date}\"
"
                if [ $? -ne 0 ]; then
                        return 1
                fi
        fi

        if [ $(STRINGS_Is_Empty "$___title") -ne 0 ]; then
                FS::append_file "$___filepath" "\
title: \"${___title}\"
"
                if [ $? -ne 0 ]; then
                        return 1
                fi
        fi

        if [ $(STRINGS_Is_Empty "$___version") -ne 0 ]; then
                FS::append_file "$___filepath" "\
version: \"${___version}\"
"
                if [ $? -ne 0 ]; then
                        return 1
                fi
        fi

        if [ $(STRINGS_Is_Empty "$___license") -ne 0 ]; then
                FS::append_file "$___filepath" "\
license: \"${___license}\"
"
                if [ $? -ne 0 ]; then
                        return 1
                fi
        fi

        if [ $(STRINGS_Is_Empty "$___repo") -ne 0 ]; then
                FS::append_file "$___filepath" "\
repository: \"${___repo}\"
"
                if [ $? -ne 0 ]; then
                        return 1
                fi
        fi

        if [ $(STRINGS_Is_Empty "$___repo_code") -ne 0 ]; then
                FS::append_file "$___filepath" "\
repository-code: \"${___repo_code}\"
"
                if [ $? -ne 0 ]; then
                        return 1
                fi
        fi

        if [ $(STRINGS_Is_Empty "$___repo_artifact") -ne 0 ]; then
                FS::append_file "$___filepath" "\
repository-artifact: \"${___repo_artifact}\"
"
                if [ $? -ne 0 ]; then
                        return 1
                fi
        fi

        if [ $(STRINGS_Is_Empty "$___contact_website") -ne 0 ]; then
                FS::append_file "$___filepath" "\
url: \"${___contact_website}\"
"
                if [ $? -ne 0 ]; then
                        return 1
                fi
        fi

        if [ $(STRINGS_Is_Empty "$___contact_name") -ne 0 ]; then
                if [ $(STRINGS_Is_Empty "$___contact_website") -ne 0 ] ||
                        [ $(STRINGS_Is_Empty "$___contact_email") -ne 0 ]; then
                        FS::append_file "$___filepath" "\
contact:
  - affiliation: \"${___contact_name}\"
"
                        if [ $? -ne 0 ]; then
                                return 1
                        fi

                        if [ $(STRINGS_Is_Empty "$___contact_email") -ne 0 ]; then
                                FS::append_file "$___filepath" "\
    email: \"${___contact_email}\"
"
                                if [ $? -ne 0 ]; then
                                        return 1
                                fi
                        fi

                        if [ $(STRINGS_Is_Empty "$___contact_website") -ne 0 ]; then
                                FS::append_file "$___filepath" "\
    website: \"${___contact_website}\"
"
                                if [ $? -ne 0 ]; then
                                        return 1
                                fi
                        fi
                fi
        fi

        FS::is_file "$___abstract_filepath"
        if [ $? -eq 0 ]; then
                FS::append_file "$___filepath" "\
abstract: |-
"
                if [ $? -ne 0 ]; then
                        return 1
                fi

                ___old_IFS="$IFS"
                while IFS="" read -r ___line || [ -n "$___line" ]; do
                        if [ $(STRINGS_Is_Empty "$___line") -ne 0 ] &&
                                [ $(STRINGS_Is_Empty "${___line%%#*}") -eq 0 ]; then
                                continue
                        fi

                        ___line="${___line%%#*}"
                        if [ $(STRINGS_Is_Empty "$___line") -ne 0 ]; then
                                ___line="  ${___line}"
                        fi

                        FS::append_file "$___filepath" "${___line}\n"
                        if [ $? -ne 0 ]; then
                                return 1
                        fi
                done < "$___abstract_filepath"
                IFS="$___old_IFS" && unset ___old_IFS
        fi

        ___old_IFS="$IFS"
        while IFS="" read -r ___line || [ -n "$___line" ]; do
                if [ $(STRINGS_Is_Empty "$___line") -ne 0 ] &&
                        [ $(STRINGS_Is_Empty "${___line%%#*}") -eq 0 ]; then
                        continue
                fi

                ___line="${___line%%#*}"
                if [ $(STRINGS_Is_Empty "$___line") -eq 0 ]; then
                        continue
                fi

                FS::append_file "$___filepath" "${___line}\n"
                if [ $? -ne 0 ]; then
                        return 1
                fi
        done < "$___citation_filepath"
        IFS="$___old_IFS" && unset ___old_IFS


        # report status
        return 0
}
