# AutomataCI - Project Configurations Data File
################################################################################
# WARNING: STRICTLY ONLY THESE PATTERN ARE ALLOWED:                            #
#                                                                              #
#             'key' = 'value: string type' # 1 line tailing comment            #
#                                                                              #
#                                 OR                                           #
#                                                                              #
#             # full line comment                                              #
#                                                                              #
#          Both Batch and POSIX Shell do not have sophisicated functions       #
#          (e.g. POSIX Shell does not have array at all!).                     #
#                                                                              #
#          DO NOT get too creative with TOML!                                  #
################################################################################
####################
# PROJECT METADATA #
####################
# PROJECT_SKU
# This is the known product ID used as a command, marketing brand, etc.
# It should be used with dash ('-'), no space and no underscore for maximum
# compatibility.
PROJECT_SKU = "my-project"

# PROJECT_NAME
# This is the name of the product used in documentation, marketing addresses
# etc only. For programming purposes, PROJECT_SKU is used instead.
PROJECT_NAME = "My Project"

# PROJECT_PITCH
# A short elevator pitch about the project used as a short description. Max
# Max: 60 characters.
PROJECT_PITCH = "To Do Things Seamlessly Easy."

# PROJECT_VERSION
# This is to declare the current project's version. It can be used for
# generating version declaration files (e.g. VERSION, version.go, etc). You
# should only update this field and leave the AutomataCI to generate those
# output files.
PROJECT_VERSION = "0.0.1"




######################
# PROJECT FILESYSTEM #
######################
# PROJECT_PATH_ROOT
# This is an absolute pathing to locate the root directory of the project
# repository.
# PROJECT_PATH_ROOT = '...' # Reserved - determined by ci.cmd automatically.


# PROJECT_PATH_AUTOMATA
# This is the relative pathing to PROJECT_PATH_ROOT where it locates the
# AutomataCI working directory.
PROJECT_PATH_AUTOMATA = "automataCI"


# PROJECT_PATH_SOURCE
# This is the relative pathing to PROJECT_PATH_ROOT where it locates the
# project's source codes working directory.
PROJECT_PATH_SOURCE = "srcPYTHON"


# PROJECT_PATH_TOOLS
# This is the relative pathing to PROJECT_PATH_ROOT where it locates the
# project's tooling directory like programming languages' engine or executables.
PROJECT_PATH_TOOLS = "tools"


# PROJECT_PATH_BUILD
# This is the relative pathing to PROJECT_PATH_ROOT where it locates the
# project's build output directory.
PROJECT_PATH_BUILD = "build"


# PROJECT_PATH_TEMP
# This is the relative pathing to PROJECT_PATH_ROOT where it locates the
# project's temporary workspace directory.
PROJECT_PATH_TEMP = "tmp"


# PROJECT_PATH_LOG
# This is the relative pathing to PROJECT_PATH_ROOT where it locates the
# project's log output directory.
PROJECT_PATH_LOG = "log"


# PROJECT_PATH_CI
# This is the relative pathing to PROJECT_PATH_ROOT + PROJECT_PATH_SOURCE where
# it locates the project's tech-specific CI job directory.
PROJECT_PATH_CI = ".ci"


# PROJECT_PATH_PKG
# This is the relative pathing to PROJECT_PATH_ROOT where it locates the
# project's releasable packages output directory.
PROJECT_PATH_PKG = "pkg"


# PROJECT_PATH_RESOURCES
# This is the relative pathing to PROJECT_PATH_ROOT where it locates the
# project's main non-code generative materials directory.
PROJECT_PATH_RESOURCES = "resources"




######################
# PYTHON TECHNOLOGY  #
######################
# PROJECT_PYTHON
# This is a reserved variable used in GitHub CI workflow where the GitHub CI
# will automatically determines the requirement for setting up python in the
# native OSes before running any job.
# PROJECT_PYTHON = '...' # Reserved - set by GitHub CI workflow.


# PROJECT_PATH_PYTHON_ENGINE
# This is a relative pathing to PROJECT_PATH_ROOT + PROJECT_PATH_TOOLS for
# setting up venv location.
PROJECT_PATH_PYTHON_ENGINE = "python-engine"




##########################
# DISTRIBUTION ECOSYSTEM #
##########################
# PROJECT_CONTACT_NAME
# Entity's full name for inquiries.
PROJECT_CONTACT_NAME = "Your Legal Full Name Here"


# PROJECT_CONTACT_EMAIL
# Entity's email channel for email communications.
PROJECT_CONTACT_EMAIL = "contact@youremail.example"


# PROJECT_CONTACT_WEBSITE
# Entity's website channel for sourcing information.
PROJECT_CONTACT_WEBSITE = "https://your-product.website.here"


# PROJECT_DEBIAN_IS_NATIVE
# Flag to determine the project is Debian natively sponsored package. Usually
# is false.
# Only accept: "true/false"
PROJECT_DEBIAN_IS_NATIVE = "false"


# PROJECT_DEBIAN_DISTRIBUTION
# The distribution series for compiling the .deb pakage changelog. See this page
# for more info:
# https://www.debian.org/doc/debian-policy/ch-controlfields.html#id25
# https://www.debian.org/doc/debian-policy/ch-source.html#debian-changelog-debian-changelog
#
# Strictly of the following values:
#   (1) stable = for stable branches (e.g. 'main')
#   (2) unstable OR testing = for next release branches (e.g 'staging', or 'next').
#   (3) experimental = for latest branches (e.g 'experimental' or 'edge').
PROJECT_DEBIAN_DISTRIBUTION = "stable"


# PROJECT_DEBIAN_URGENCY
# The urgency value for compiling the .deb pakage changelog. See this page
# for more info:
# https://www.debian.org/doc/debian-policy/ch-controlfields.html#s-f-urgency
# https://www.debian.org/doc/debian-policy/ch-source.html#debian-changelog-debian-changelog
#
# Strictly of the following values:
#   (1) low
#   (2) medium
#   (3) high           = for user diversions
#   (4) emergency
#   (5) critical
PROJECT_DEBIAN_URGENCY = "low"
