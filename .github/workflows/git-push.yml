name: on Git Push
run-name: CI Run upon Git Push.
on:
  push:
    branches:
      - main
      - stable
      - next
      - testing
      - staging
      - edge
      - experimental
jobs:
  develop_on:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
        TERM: xterm-256color
        CONTAINER_USERNAME: ${{ secrets.CONTAINER_USERNAME }}
        CONTAINER_PASSWORD: ${{ secrets.CONTAINER_PASSWORD }}
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        PROJECT_SIMULATE_RELEASE_REPO: true
    steps:
      - name: Checking out designated commit - GITHUB ACTIONS
        id: git_check_out
        uses: actions/checkout@v4
      - name: Initialize - GITHUB ACTIONS
        id: git_initialize
        run: |
          git config --global user.email "github.actions.runner@github.com"
          git config --global user.name "Github Action Automated Runner"
      - name: Execute repo's AutomataCI - PURGE
        id: native_ci_purge
        run: |
          ./automataCI/ci.sh.ps1 purge
      - name: Execute repo's AutomataCI - CLEAN
        id: native_ci_clean
        run: |
          ./automataCI/ci.sh.ps1 clean
      - name: Execute repo's AutomataCI - ENVIRONMENT
        id: native_ci_env
        run: |
          ./automataCI/ci.sh.ps1 env
      - name: Execute repo's AutomataCI - SETUP
        id: native_ci_setup
        run: |
          ./automataCI/ci.sh.ps1 setup
      - name: Execute repo's AutomataCI - PREPARE
        id: native_ci_prepare
        run: |
          ./automataCI/ci.sh.ps1 prepare
      - name: Execute repo's AutomataCI - START
        id: native_ci_start
        run: |
          ./automataCI/ci.sh.ps1 start
      - name: Execute repo's AutomataCI - TEST
        id: native_ci_test
        run: |
          ./automataCI/ci.sh.ps1 test
      - name: Execute repo's AutomataCI - MATERIALIZE
        id: native_ci_materialize
        run: |
          ./automataCI/ci.sh.ps1 materialize
      - name: Execute repo's AutomataCI - BUILD
        id: native_ci_build
        run: |
          ./automataCI/ci.sh.ps1 build
      - name: Execute repo's AutomataCI - NOTARIZE
        id: native_ci_notarize
        run: |
          ./automataCI/ci.sh.ps1 notarize
      - name: Execute repo's AutomataCI - PACKAGE
        id: native_ci_package
        run: |
          ./automataCI/ci.sh.ps1 package
      - name: Execute repo's AutomataCI - RELEASE
        id: native_ci_release
        run: |
          ./automataCI/ci.sh.ps1 release
      - name: Execute repo's AutomataCI - STOP
        id: native_ci_stop
        run: |
          ./automataCI/ci.sh.ps1 stop
      - name: Execute repo's AutomataCI - DEPLOY
        id: native_ci_deploy
        run: |
          ./automataCI/ci.sh.ps1 deploy
      - name: Archive Payloads Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: build_${{ matrix.os }}
          path: |
            build/
            log/
            pkg/
            public/
      - name: Archive Workspace Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: workspace_${{ matrix.os }}
          path: |
            bin/
            lib/
            tmp/
            releases/
